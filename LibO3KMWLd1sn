local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local UI = {}

if game.CoreGui:FindFirstChild('UnkLib') then
    game.CoreGui:FindFirstChild('UnkLib'):Destroy()
end

local function protectGui(obj)
    if batDestroyed then
        obj.Parent = game.CoreGui
        return
    end
    if syn and syn.protect_gui then
        syn.protect_gui(obj)
        obj.Parent = game.CoreGui
    elseif PROTOSMASHER_LOADED then
        obj.Parent = get_hidden_gui()
    else
        obj.Parent = game.CoreGui
    end
end

local guifolder = Instance.new("Folder")
guifolder.Name = "UnkLib"
protectGui(guifolder)

local gui = Instance.new("ScreenGui")
gui.Name = "markk"
gui.Parent = guifolder

-- will use this on next update
local function GetUI(UINames, Properties, Parent)
    local validUIs = {
        UICorner = true,
        UIStroke = true,
        UIPadding = true,
        UIListLayout = true
    }

    if type(UINames) == "string" then
        UINames = {UINames}
    end

    local UIElements = {}

    for _, UIname in pairs(UINames) do
        if validUIs[UIname] then
            local UIElement = Instance.new(UIname)
            for Property, Value in pairs(Properties) do  
                UIElement[Property] = Value  
            end
            UIElement.Parent = Parent
            
            table.insert(UIElements, UIElement)
        end
    end
    return UIElements
end

local function Round(Number, Factor)
	local Result = math.floor(Number/Factor + (math.sign(Number) * 0.5)) * Factor
	if Result < 0 then Result = Result + Factor end
	return Result
end

local function MakeDraggable(DragPoint, Main)
	pcall(function()
		local Dragging, DragInput, MousePos, FramePos = false		
		DragPoint.InputBegan:Connect(function(Input)
			if Input.UserInputType == Enum.UserInputType.MouseButton1 or Input.UserInputType == Enum.UserInputType.Touch then
				Dragging = true
				MousePos = Input.Position
				FramePos = Main.Position

				Input.Changed:Connect(function()
					if Input.UserInputState == Enum.UserInputState.End then
						Dragging = false
					end
				end)
			end
		end)

		DragPoint.InputChanged:Connect(function(Input)
			if Input.UserInputType == Enum.UserInputType.MouseMovement or Input.UserInputType == Enum.UserInputType.Touch then
				DragInput = Input
			end
		end)

		UserInputService.InputChanged:Connect(function(Input)
			if Input == DragInput and Dragging then
				local Delta = Input.Position - MousePos
				TweenService:Create(Main, TweenInfo.new(0.05, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {
					Position = UDim2.new(FramePos.X.Scale, FramePos.X.Offset + Delta.X, FramePos.Y.Scale, FramePos.Y.Offset + Delta.Y)
				}):Play()
			end
		end)
	end)
end 

function UI:CreateNotify(NotifyConfig)
    NotifyConfig.Name = NotifyConfig.Name or "Name"
    NotifyConfig.Description = NotifyConfig.Description or "Description"
    NotifyConfig.Duration = NotifyConfig.Duration or 5
    
    if not guifolder:FindFirstChild("NotificationHandler") then    
	    local notify = Instance.new("ScreenGui")
		notify.Name = "NotificationHandler"
		notify.Parent = guifolder
		
	    notificationHandler = Instance.new("Frame")
	    notificationHandler.Size = UDim2.new(0, 180, 0, 300)
	    notificationHandler.Position = UDim2.new(1, -180, 0, 0)
	    notificationHandler.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	    notificationHandler.BorderColor3 = Color3.fromRGB(0, 0, 0)
	    notificationHandler.BorderSizePixel = 1
	    notificationHandler.Active = false
	    notificationHandler.BackgroundTransparency = 1
	    notificationHandler.Parent = notify
	
	    local listing = Instance.new("UIListLayout")
	    listing.SortOrder = Enum.SortOrder.LayoutOrder
	    listing.Padding = UDim.new(0, 5)
	    listing.HorizontalAlignment = Enum.HorizontalAlignment.Right
	    listing.VerticalAlignment = Enum.VerticalAlignment.Bottom
	    listing.Parent = notificationHandler
    end
    
    local notification = Instance.new("Frame")
    notification.Size = UDim2.new(0, 0, 0, 5)
    notification.Position = UDim2.new(1, -195, 0, 220)
    notification.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
    notification.BorderColor3 = Color3.fromRGB(0, 0, 0)
    notification.BorderSizePixel = 1
    notification.Active = true
    notification.BackgroundTransparency = 0
    notification.Parent = notificationHandler
    notification.AutomaticSize = Enum.AutomaticSize.Y

    local notificationSmooth = Instance.new("ScrollingFrame")
    notificationSmooth.Size = UDim2.new(1, 0, 0, 5)
    notificationSmooth.ScrollingEnabled = false
    notificationSmooth.ScrollBarThickness = 0
    notificationSmooth.BorderSizePixel = 1
    notificationSmooth.Active = true
    notificationSmooth.BackgroundTransparency = 1
    notificationSmooth.Parent = notification
    notificationSmooth.AutomaticSize = Enum.AutomaticSize.Y

    local paddingfornotify = Instance.new("UIPadding")
    paddingfornotify.PaddingTop = UDim.new(0, 8)
    paddingfornotify.PaddingBottom = UDim.new(0, 8)
    paddingfornotify.PaddingLeft = UDim.new(0, 8)
    paddingfornotify.PaddingRight = UDim.new(0, 8)
    paddingfornotify.Parent = notification

    local cornerfornotify = Instance.new("UICorner")
    cornerfornotify.CornerRadius = UDim.new(0, 6)
    cornerfornotify.Parent = notification

    local notificationtitle = Instance.new("TextLabel")
    notificationtitle.Size = UDim2.new(1, 0, 0, 26)
    notificationtitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    notificationtitle.BorderColor3 = Color3.fromRGB(0, 0, 0)
    notificationtitle.BorderSizePixel = 1
    notificationtitle.Text = NotifyConfig.Name
    notificationtitle.BackgroundTransparency = 1
    notificationtitle.TextColor3 = Color3.fromRGB(255, 255, 255)
    notificationtitle.Font = Enum.Font.GothamBold
    notificationtitle.Parent = notificationSmooth
    notificationtitle.TextSize = 14
    notificationtitle.TextXAlignment = Enum.TextXAlignment.Left

    local paddingfornotifytitle = Instance.new("UIPadding")
    paddingfornotifytitle.PaddingLeft = UDim.new(0, 6)
    paddingfornotifytitle.Parent = notificationtitle

    local notificationicon = Instance.new("ImageLabel")
    notificationicon.Size = UDim2.new(0, 26, 0, 26)
    notificationicon.Position = UDim2.new(1, -26, 0, 0)
    notificationicon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    notificationicon.ImageColor3 = Color3.fromRGB(255, 255, 255)
    notificationicon.Image = ""
    notificationicon.ImageTransparency = 0
    notificationicon.ScaleType = Enum.ScaleType.Stretch
    notificationicon.BackgroundTransparency = 1
    notificationicon.Parent = notificationtitle

    local notificationdescription = Instance.new("TextLabel")
    notificationdescription.Size = UDim2.new(1, 0, 0, 0)
    notificationdescription.Position = UDim2.new(0, 0, 0, 20)
    notificationdescription.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    notificationdescription.Text = NotifyConfig.Description
    notificationdescription.BackgroundTransparency = 1
    notificationdescription.TextColor3 = Color3.fromRGB(111, 111, 111)
    notificationdescription.Font = Enum.Font.GothamSemibold
    notificationdescription.Parent = notificationSmooth
    notificationdescription.AutomaticSize = Enum.AutomaticSize.Y
    notificationdescription.TextXAlignment = Enum.TextXAlignment.Left
    notificationdescription.TextYAlignment = Enum.TextYAlignment.Top
    local paddingfornotifydescription = paddingfornotify:Clone()
    paddingfornotifydescription.Parent = notificationdescription
    notificationdescription.TextSize = 12
    notificationdescription.TextWrapped = true      
    TweenService:Create(notification, TweenInfo.new(1, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(0, 195, 0, 5)}):Play()

    task.delay(NotifyConfig.Duration, function()
        TweenService:Create(notification, TweenInfo.new(0.5, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
		TweenService:Create(notificationSmooth, TweenInfo.new(0.5, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
		TweenService:Create(notificationtitle, TweenInfo.new(0.5, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
		TweenService:Create(notificationdescription, TweenInfo.new(0.5, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
		TweenService:Create(notificationicon, TweenInfo.new(0.5, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {ImageTransparency = 1}):Play()
		
		wait(0.6)
		notification:Destroy()
    end)
end

function UI:CreateLibrary(WindowConfig)
	local FirstTab = true
	
	WindowConfig = WindowConfig or {}
	WindowConfig.Name = WindowConfig.Name or "worse UI LIBRARY"
	WindowConfig.HasLoading = WindowConfig.HasLoading or false
	WindowConfig.Loading = WindowConfig.Loading or {}
	WindowConfig.CanDrag = WindowConfig.CanDrag or false
	
	local main = Instance.new("Frame")
	main.Size = UDim2.new(0, 427, 0, 300)
	main.Position = UDim2.new(0.5, 0, 0, 20)
	main.AnchorPoint = Vector2.new(0.5, 0)
	main.BackgroundColor3 = Color3.fromRGB(30,30,30)
	main.BorderColor3 = Color3.fromRGB(0, 0, 0)
	main.BorderSizePixel = 1
	main.Visible = true
	main.BackgroundTransparency = 0
	main.Parent = gui
	
	local g = GetUI({"UICorner"}, {
		    CornerRadius = UDim.new(0, 6)
	}, main)
	
	local topbarholder = Instance.new("Frame")
	topbarholder.Size = UDim2.new(1, 0, 0, 42)
	topbarholder.BackgroundColor3 = Color3.fromRGB(24, 23, 28)
	topbarholder.BorderColor3 = Color3.fromRGB(0, 0, 0)
	topbarholder.BorderSizePixel = 1
	topbarholder.Active = true
	topbarholder.BackgroundTransparency = 1
	topbarholder.Parent = main
	
	if WindowConfig.CanDrag then
  	 MakeDraggable(topbarholder, main)
    end
	
	local corner2 = GetUI({"UICorner"}, {
		    CornerRadius = UDim.new(0, 3)
	}, main)
	
	local line = Instance.new("Frame")
	line.Size = UDim2.new(1, 0, 0, 1)
	line.Position = UDim2.new(0, 0, 1, 0)
	line.BackgroundColor3 = Color3.fromRGB(46,46,46)
	line.BorderColor3 = Color3.fromRGB(0, 0, 0)
	line.BorderSizePixel = 0
	line.BackgroundTransparency = 0
	line.Parent = topbarholder
	
	local maintitle = Instance.new("TextLabel")
	maintitle.Size = UDim2.new(1, 0, 1, 0)
	maintitle.BackgroundTransparency = 1
	maintitle.Text = WindowConfig.Name
	maintitle.TextColor3 = Color3.fromRGB(255,255,255)
	maintitle.Font = Enum.Font.GothamSemibold
	maintitle.TextSize = 15
	maintitle.TextXAlignment = Enum.TextXAlignment.Left
	maintitle.Parent = topbarholder
	
	local padding = GetUI({"UIPadding"}, {
	    PaddingLeft = UDim.new(0, 12)
	}, maintitle)
	
	local function Loader(LoadingConfig)
		local obj = {}	
		LoadingConfig.Title = LoadingConfig.Title or WindowConfig.Name
		
		local FadeBackgroundFrame = Instance.new("Frame")
		FadeBackgroundFrame.Parent = gui
		FadeBackgroundFrame.BackgroundColor3 = Color3.fromRGB(30,30,30)
		FadeBackgroundFrame.BackgroundTransparency = 1.000
		FadeBackgroundFrame.BorderSizePixel = 0
		FadeBackgroundFrame.Size = UDim2.new(0, 427, 0, 300)
		FadeBackgroundFrame.Position = UDim2.new(0.5, 0, 0, 20)
		FadeBackgroundFrame.AnchorPoint = Vector2.new(0.5, 0)
		g[1]:Clone().Parent = FadeBackgroundFrame
		
		local LoadingTitle = Instance.new("TextLabel")
		LoadingTitle.Size = UDim2.new(1, -20, 0, 50)
		LoadingTitle.Position = UDim2.new(0, 10, 0, 50)
		LoadingTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		LoadingTitle.BorderColor3 = Color3.fromRGB(0, 0, 0)
		LoadingTitle.BorderSizePixel = 1
		LoadingTitle.Text = LoadingConfig.Title
		LoadingTitle.BackgroundTransparency = 1
		LoadingTitle.TextTransparency = 0
		LoadingTitle.TextColor3 = Color3.fromRGB(255,255,255)
		LoadingTitle.Font = Enum.Font.GothamBold
		LoadingTitle.Parent = FadeBackgroundFrame
		LoadingTitle.TextSize = 25
		
		local Circles = Instance.new("Frame")		
		Circles.Parent = FadeBackgroundFrame
		Circles.AnchorPoint = Vector2.new(0.5, 0.5)
		Circles.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
		Circles.BackgroundTransparency = 1
		Circles.BorderSizePixel = 0
		Circles.ClipsDescendants = false
		Circles.Position = UDim2.new(0.5, 0, 0.6, 0)
		Circles.Size = UDim2.new(0, 80, 0, 50)
		Circles.ZIndex = 40
		TweenService:Create(FadeBackgroundFrame,TweenInfo.new(0.1),{BackgroundTransparency = 0}):Play()
	
		for i = 1,4 do
			local Circle = Instance.new("Frame")
			Circle.Parent = Circles
			Circle.AnchorPoint = Vector2.new(0, 0.5)
			Circle.BackgroundColor3 = Color3.fromRGB(255, 165, 0)
			Circle.BorderSizePixel = 0
			Circle.BackgroundTransparency = 0
			Circle.Position = UDim2.new(0, (i - 1) * 17, 0.5, 0)
			Circle.Size = UDim2.new(0, 16, 0, 16)
			
			local CircleCorner = Instance.new("UICorner")
			CircleCorner.CornerRadius = UDim.new(0, 100)
			CircleCorner.Name = "CircleCorner"
			CircleCorner.Parent = Circle
	
			table.insert(obj, Circle)
		end
	
		spawn(function()
			for _ = 1,5 do wait(0.7)
				local el = table.remove(obj)
				table.insert(obj, 1, el)
				for i, v in pairs(obj) do
					if i == 1 then
						v:TweenSize(UDim2.new(0,17,0,17),"Out","Linear",0.15,true)
					elseif i == 4 then
						v:TweenSize(UDim2.new(0,0,0,0),"Out","Linear",0.15,true)
						wait(0.15)
						v:TweenPosition(UDim2.new(0,0,0.5,0),"Out","Quad",0)
					end
					v:TweenPosition(UDim2.new(0,i * 17,0.5,0),"Out","Quad",0.35)
					if _ == 5 then
						TweenService:Create(FadeBackgroundFrame, TweenInfo.new(0.1), {BackgroundTransparency = 0.99}):Play()
						TweenService:Create(v,TweenInfo.new(0.3),{BackgroundTransparency = 1}):Play()
						TweenService:Create(LoadingTitle,TweenInfo.new(0.3),{TextTransparency = 1}):Play()
						
					end
				end
			end
		end)
	end
	
	if WindowConfig.HasLoading then
		Loader(WindowConfig.Loading or {})
	end
	
	local guiminizerholder = Instance.new("Frame")
	guiminizerholder.Size = UDim2.new(0, 70, 0, 30)
	guiminizerholder.Position = UDim2.new(1, -83, 0, 6)
	guiminizerholder.BackgroundColor3 = Color3.fromRGB(50,50,50)
	guiminizerholder.BorderColor3 = Color3.fromRGB(0, 0, 0)
	guiminizerholder.BorderSizePixel = 1
	guiminizerholder.Active = true
	guiminizerholder.BackgroundTransparency = 0
	guiminizerholder.Parent = topbarholder
	
	local cornerr = Instance.new("UICorner")
	cornerr.CornerRadius = UDim.new(0, 7)
	cornerr.Parent = guiminizerholder

	local MinimizeBtn = Instance.new("TextButton")
	MinimizeBtn.Size = UDim2.new(0.5, 0, 1, 0)
	MinimizeBtn.Position = UDim2.new(0, 0, 0, 0)
	MinimizeBtn.Text = "–"
	MinimizeBtn.TextSize = 20
	MinimizeBtn.BackgroundTransparency = 01
	MinimizeBtn.TextColor3 = Color3.new(255, 255, 255)
	MinimizeBtn.Font = Enum.Font.GothamBold
	MinimizeBtn.Parent = guiminizerholder
	
	local Closebtn = Instance.new("TextButton")
	Closebtn.Size = UDim2.new(0.5, 0, 1, 0)
	Closebtn.Position = UDim2.new(0.5, 0, 0, 0)
	Closebtn.Text = "▢"
	Closebtn.TextSize = 18
	Closebtn.BackgroundTransparency = 1
	Closebtn.TextColor3 = Color3.new(255, 255, 255)
	Closebtn.Font = Enum.Font.GothamBold
	Closebtn.Parent = guiminizerholder
	
	local minimizeholder = Instance.new("Frame")
	minimizeholder.Size = UDim2.new(0, 42, 0, 42)
	minimizeholder.Position = UDim2.new(0.5, 0, 0, 20)
	minimizeholder.AnchorPoint = Vector2.new(0.5, 0)
	minimizeholder.BackgroundColor3 = Color3.fromRGB(36,36,36)
	minimizeholder.BorderColor3 = Color3.fromRGB(0, 0, 0)
	minimizeholder.BorderSizePixel = 1
	minimizeholder.Active = false
	minimizeholder.Visible = false
	minimizeholder.BackgroundTransparency = 0
	minimizeholder.Parent = gui
	
	local minimizescroll = Instance.new("ScrollingFrame")
	minimizescroll.Size = UDim2.new(1, 0, 0, 42)
	minimizescroll.BackgroundColor3 = Color3.fromRGB(36,36,36)
	minimizescroll.ScrollingEnabled = false
	minimizescroll.ScrollBarThickness = 0
	minimizescroll.BackgroundTransparency = 1
	minimizescroll.Parent = minimizeholder
	
	 local minimizepadding = GetUI({"UIPadding"}, {
	    PaddingRight = UDim.new(0, 6)
	}, minimizeholder)
	
	
	local minimizeit = Instance.new("ImageButton")
	minimizeit.Size = UDim2.new(0, 42, 0, 42)
	minimizeit.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	minimizeit.ImageColor3 = Color3.fromRGB(255, 255, 255)
	minimizeit.Image = "rbxassetid://127269137742800"
	minimizeit.ImageTransparency = 0
	minimizeit.ScaleType = Enum.ScaleType.Stretch
	minimizeit.BackgroundTransparency = 1
	minimizeit.Parent = minimizescroll
	
	local minimizecorner = Instance.new("UICorner")
	minimizecorner.CornerRadius = UDim.new(0, 5)
	minimizecorner.Parent = minimizeholder
	
	local minimizetips = Instance.new("TextLabel")
	minimizetips.Size = UDim2.new(1, -42, 0, 42)
	minimizetips.Position = UDim2.new(0, 42, 0, 0)
	minimizetips.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	minimizetips.BorderColor3 = Color3.fromRGB(0, 0, 0)
	minimizetips.BorderSizePixel = 1
	minimizetips.Visible = true
	minimizetips.Text = "Click This to open the library"
	minimizetips.BackgroundTransparency = 1
	minimizetips.TextColor3 = Color3.fromRGB(255,255,255)
	minimizetips.TextXAlignment = Enum.TextXAlignment.Left
	minimizetips.Font = Enum.Font.SciFi
	minimizetips.Parent = minimizescroll
	minimizetips.TextSize = 14 

	MinimizeBtn.MouseButton1Up:Connect(function()
	    local bruv = TweenService:Create(main, TweenInfo.new(1, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(0, 100, 0, 36)})
	    bruv:Play()
	    wait(.8)
	    main.Visible = false
	    minimizeholder.Visible = true
	
	    wait(0.6)
	    TweenService:Create(minimizeholder, TweenInfo.new(1, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(0, 216, 0, 42)}):Play()
		 wait(2)
		 TweenService:Create(minimizeholder, TweenInfo.new(1, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(0, 42, 0, 42)}):Play()
		 wait(0.7)
		 minimizeholder.Active = true
	end)
	
	minimizeit.MouseButton1Up:Connect(function()
	    minimizeholder.Visible = false
	    main.Visible = true
	    wait(0.2)
	    TweenService:Create(main, TweenInfo.new(1, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(0, 427, 0, 300)}):Play()
	end)
	

	local destroymain = Instance.new("Frame")
	destroymain.Size = UDim2.new(0, 427, 0, 300)
	destroymain.Position = UDim2.new(0, 0, 0, 0)
	destroymain.BackgroundColor3 = Color3.fromRGB(40,40,40)
	destroymain.BorderColor3 = Color3.fromRGB(0, 0, 0)
	destroymain.BorderSizePixel = 1
	destroymain.Active = true
	destroymain.ZIndex = 10
	destroymain.Visible = false
	destroymain.BackgroundTransparency = 1
	destroymain.Parent = main
	
	local destroycorner = Instance.new("UICorner")
	destroycorner.CornerRadius = UDim.new(0, 6)
	destroycorner.Parent = destroymain
	
	local destroyholder = Instance.new("Frame")
	destroyholder.Size = UDim2.new(0, 200, 0, 170)
	destroyholder.Position = UDim2.new(0, 118.5, 0, 70)
	destroyholder.BackgroundColor3 = Color3.fromRGB(46,46,46)
	destroyholder.BorderSizePixel = 1
	destroyholder.Active = true
	destroyholder.ZIndex = 10
	destroyholder.BackgroundTransparency = 1
	destroyholder.Draggable = true
	destroyholder.Parent = destroymain
	destroycorner:Clone().Parent = destroyholder
	
	local destroytitle = Instance.new("TextLabel")
	destroytitle.Size = UDim2.new(1, 0, 0, 37)
	destroytitle.Position = UDim2.new(0, 0, 0, 0)
	destroytitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	destroytitle.BorderColor3 = Color3.fromRGB(0, 0, 0)
	destroytitle.BorderSizePixel = 1
	destroytitle.Text = "Warning"
	destroytitle.TextTransparency = 1
	destroytitle.ZIndex = 10
	destroytitle.BackgroundTransparency = 1
	destroytitle.TextColor3 = Color3.fromRGB(255,255,255)
	destroytitle.Font = Enum.Font.GothamBold
	destroytitle.Parent = destroyholder
	destroytitle.TextSize = 15
	
	local line = Instance.new("Frame")
	line.Size = UDim2.new(1, 0, 0, 1)
	line.Position = UDim2.new(0, 0, 1, 0)
	line.ZIndex = 10
	line.BackgroundColor3 = Color3.fromRGB(46,46,46)
	line.BackgroundTransparency = 0
	line.Parent = destroytitle	
	
	local destroycancel = Instance.new("TextButton")
	destroycancel.Size = UDim2.new(0, 37, 0, 37)
	destroycancel.Position = UDim2.new(1, -36, 0, 0)
	destroycancel.Text = "X"
	destroycancel.ZIndex = 10
	destroycancel.Visible = false
	destroycancel.BackgroundTransparency = 1
	destroycancel.TextColor3 = Color3.fromRGB(255, 100, 20)
	destroycancel.Font = Enum.Font.GothamBold
	destroycancel.Parent = destroytitle
	destroycancel.TextSize = 20
	
	local DestroyWarning = Instance.new("TextLabel")
	DestroyWarning.Size = UDim2.new(1, -20, 0, 60)
	DestroyWarning.Position = UDim2.new(0, 10, 0, 44)
	DestroyWarning.Text = "Are you sure?\nDeleting the UI library while functions run\nmay cause errors."
	DestroyWarning.ZIndex = 10
	DestroyWarning.BackgroundTransparency = 1
	DestroyWarning.TextColor3 = Color3.fromRGB(111,111,111)
	DestroyWarning.Font = Enum.Font.GothamSemibold
	DestroyWarning.Parent = destroyholder
	DestroyWarning.TextSize = 10
	
	local destroyNOW = Instance.new("TextButton")
	destroyNOW.Size = UDim2.new(0, 120, 0, 38)
	destroyNOW.Position = UDim2.new(0, 40, 1, -55)
	destroyNOW.BackgroundColor3 = Color3.fromRGB(60,60,60)
	destroyNOW.BorderColor3 = Color3.fromRGB(0, 0, 0)
	destroyNOW.BorderSizePixel = 1
	destroyNOW.Text = "alr bro"
	destroyNOW.ZIndex = 10
	destroyNOW.BackgroundTransparency = 0
	destroyNOW.TextColor3 = Color3.fromRGB(255,255,255)
	destroyNOW.Font = Enum.Font.GothamBold
	destroyNOW.Parent = destroyholder
	destroyNOW.TextSize = 14
	destroycorner:Clone().Parent = destroyNOW
	
	Closebtn.MouseButton1Up:Connect(function()
    	destroymain.Visible = true
        wait(.3)
	    TweenService:Create(destroymain, TweenInfo.new(0.6, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundTransparency = 0.3}):Play()
    	TweenService:Create(destroyholder, TweenInfo.new(0.8, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
        TweenService:Create(destroytitle, TweenInfo.new(0.8, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
        TweenService:Create(destroycancel, TweenInfo.new(0.8, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
	    TweenService:Create(DestroyWarning, TweenInfo.new(0.8, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
		TweenService:Create(destroyNOW, TweenInfo.new(0.8, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
		TweenService:Create(destroyNOW, TweenInfo.new(0.8, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
        wait(math.random(4, 6))
        destroycancel.Visible = true
	end)
	
	destroycancel.MouseButton1Up:Connect(function()
		destroymain.Visible = true
		wait(.4)
	    TweenService:Create(destroymain, TweenInfo.new(0.6, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
    	TweenService:Create(destroyholder, TweenInfo.new(0.8, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
        TweenService:Create(destroytitle, TweenInfo.new(0.8, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
        TweenService:Create(destroycancel, TweenInfo.new(0.8, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
	    TweenService:Create(DestroyWarning, TweenInfo.new(0.8, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
		TweenService:Create(destroyNOW, TweenInfo.new(0.8, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
		TweenService:Create(destroyNOW, TweenInfo.new(0.8, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
        wait(.8)
        destroymain.Visible = false
        destroycancel.Visible = false
	end)
	
	destroyNOW.MouseButton1Up:Connect(function()
    	guifolder:Destroy()
	end)	
	
	local tabholder = Instance.new("Frame")
	tabholder.Size = UDim2.new(0, 126, 1, -43)
	tabholder.Position = UDim2.new(0, 0, 0, 43)
	tabholder.BackgroundColor3 = Color3.fromRGB(30,30,30)
	tabholder.Parent = main
	corner2[1]:Clone().Parent = tabholder
	
	local scroll = Instance.new("ScrollingFrame")
	scroll.Size = UDim2.new(1, 0, 1, 0)
	scroll.ScrollBarThickness = 1
	scroll.ScrollingEnabled = false
	scroll.BackgroundTransparency = 1
	scroll.Parent = tabholder
	
	local list = GetUI({"UIListLayout"}, {
	    SortOrder = Enum.SortOrder.LayoutOrder
	}, scroll)
	
	local blank = Instance.new("Frame")
	blank.Size = UDim2.new(1, 0, 0, 2)
	blank.BackgroundTransparency = 1
	blank.Parent = scroll
	
	local line2 = Instance.new("Frame")
	line2.Size = UDim2.new(0, 1, 1, 0)
	line2.Position = UDim2.new(1, 0, 0, 0)
	line2.BackgroundColor3 = Color3.fromRGB(46,46,46)
	line2.BorderColor3 = Color3.fromRGB(0, 0, 0)
	line2.BorderSizePixel = 0
	line2.Active = true
	line2.BackgroundTransparency = 0
	line2.Parent = tabholder
	
	local elementscontainer = Instance.new("ScrollingFrame")
	elementscontainer.Size = UDim2.new(1, -146, 1, -62)
	elementscontainer.Position = UDim2.new(0, 136, 0, 52)
	elementscontainer.BackgroundTransparency = 1
	elementscontainer.ScrollBarThickness = 0
	elementscontainer.Parent = main
	

	local WindowFunctions = {}

	function WindowFunctions:CreateTab(TabConfig)
		TabConfig = TabConfig or {}
		TabConfig.Name = TabConfig.Name or "Tab"
		TabConfig.Color = TabConfig.Color or Color3.fromRGB(255,255,255)
	
		local tab1 = Instance.new("Frame")
		tab1.Size = UDim2.new(1, 0, 0, 30)
		tab1.BackgroundTransparency = 1
		tab1.Parent = scroll
		
		local tabname = Instance.new("TextButton")
		tabname.Size = UDim2.new(1, 0, 1, 0)
		tabname.Text = TabConfig.Name
		tabname.TextColor3 = Color3.fromRGB(200,200,200)
		tabname.Font = Enum.Font.GothamSemibold
		tabname.BackgroundTransparency = 1
		tabname.Parent = tab1
		tabname.TextSize = 13
		tabname.TextXAlignment = Enum.TextXAlignment.Left
		
		local tabline = Instance.new("Frame")
		tabline.Size = UDim2.new(0, 2, 1, -9)
		tabline.Position = UDim2.new(0, 4, 0, 5)
		tabline.BackgroundColor3 = TabConfig.Color
		tabline.Active = true
		tabline.BackgroundTransparency = 1
		tabline.Parent = tab1
		corner2[1]:Clone().Parent = tabline
		
		local padding2 = GetUI({"UIPadding"}, {
		    PaddingLeft = UDim.new(0, 12)
		}, tabname)
	
		local Container = Instance.new("Frame")
		Container.Size = UDim2.new(1, 0, 1, 0)
		Container.BackgroundTransparency = 1
		Container.Visible = false
		Container.Parent = elementscontainer
		
		local list2 = GetUI({"UIListLayout"}, {
		    SortOrder = Enum.SortOrder.LayoutOrder,
		    Padding = UDim.new(0, 6),
		    HorizontalAlignment = Enum.HorizontalAlignment.Center
		}, Container)
		
		list2[1]:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
		    elementscontainer.CanvasSize = UDim2.new(0, 0, 0, list2[1].AbsoluteContentSize.Y)
		end)
	
		if FirstTab then
			FirstTab = false
			tabname.TextTransparency = 0
			tabname.Font = Enum.Font.GothamBold
			Container.Visible = true
			tabline.BackgroundTransparency = 0
		end    
	
		tabname.MouseButton1Click:Connect(function()
		    for _, Tab in next, scroll:GetChildren() do
		        if Tab:IsA("Frame") then
		            local Button = Tab:FindFirstChildOfClass("TextButton")
		            local Line = Tab:FindFirstChildOfClass("Frame") -- Get the tabline
		            if Button then
		                Button.Font = Enum.Font.GothamSemibold
		                TweenService:Create(Button, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {TextTransparency = 0.4}):Play()
		            end    
		            if Line then
						TweenService:Create(Line, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
		            end
		        end
		    end
		
		    for _, ItemContainer in next, elementscontainer:GetChildren() do
		        if ItemContainer:IsA("Frame") then
		            ItemContainer.Visible = false
		        end    
		    end  
		
		    TweenService:Create(tabname, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
		    tabname.Font = Enum.Font.GothamBold
		    Container.Visible = true
		    TweenService:Create(tabline, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
		end)
		
		local ContainerItems = {}

		function ContainerItems:CreateSection(SectionConfig)
			SectionConfig.Name = SectionConfig.Name or "Section"
			
			local sectionholder = Instance.new("ScrollingFrame")
			sectionholder.Size = UDim2.new(1, 0, 0, 20)
			sectionholder.Position = UDim2.new(0, 10, 0, 10)
			sectionholder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			sectionholder.BorderColor3 = Color3.fromRGB(0, 0, 0)
			sectionholder.BorderSizePixel = 1
			sectionholder.Active = true
			sectionholder.ScrollBarThickness = 0
			sectionholder.ScrollingEnabled = false
			sectionholder.BackgroundTransparency = 1
			sectionholder.Parent = Container
			
			local section = Instance.new("Frame")
			section.Size = UDim2.new(1, 0, 0, 20)
			section.Position = UDim2.new(0, 10, 0, 10)
			section.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			section.BorderColor3 = Color3.fromRGB(0, 0, 0)
			section.BorderSizePixel = 1
			section.Active = true
			section.BackgroundTransparency = 1
			section.Parent = sectionholder
			
			local lists = GetUI({"UIListLayout"}, {
			    SortOrder = Enum.SortOrder.LayoutOrder,
			    Padding = UDim.new(0, 5),
			    HorizontalAlignment = Enum.HorizontalAlignment.Center
			}, sectionholder)
			
			local sectiontitle = Instance.new("TextLabel")
			sectiontitle.Size = UDim2.new(1, 0, 1, 0)
			sectiontitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			sectiontitle.Text = SectionConfig.Name
			sectiontitle.BackgroundTransparency = 1
			sectiontitle.TextColor3 = Color3.fromRGB(200,200,200)
			sectiontitle.Font = Enum.Font.GothamBold
			sectiontitle.Parent = section
			sectiontitle.TextSize = 13
			sectiontitle.TextXAlignment = Enum.TextXAlignment.Left
			
			local padding4 = GetUI({"UIPadding"}, {
			    PaddingLeft = UDim.new(0, 3)
			}, sectiontitle)
			
			lists[1]:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
			    sectionholder.Size = UDim2.new(1, 0, 0, lists[1].AbsoluteContentSize.Y)
			end)
	
				local ElementsFunctions = {}
				
				function ElementsFunctions:AddLabel(text)		
                    local labelholder = Instance.new("Frame")
					labelholder.Size = UDim2.new(1, -2, 0, 28)
					labelholder.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
					labelholder.BorderSizePixel = 0
					labelholder.Parent = sectionholder
					corner2[1]:Clone().Parent = labelholder
					
					local labeltitle = Instance.new("TextLabel")
					labeltitle.Size = UDim2.new(1, 0, 1, 0)
					labeltitle.Position = UDim2.new(0, 0, 0, 0)
					labeltitle.BackgroundTransparency = 1
					labeltitle.Text = text
					labeltitle.TextColor3 = Color3.fromRGB(255, 255, 255)
					labeltitle.Font = Enum.Font.GothamSemibold
					labeltitle.TextSize = 13
					labeltitle.TextXAlignment = Enum.TextXAlignment.Left
					labeltitle.Parent = labelholder
					padding[1]:Clone().Parent = labeltitle
					
					local LabelChange = {}
					function LabelChange:Set(Change)
						labeltitle.Text = Change
					end
					return LabelChange				
				end				
			
				function ElementsFunctions:AddButton(ButtonConfig)
					ButtonConfig = ButtonConfig or {}
					ButtonConfig.Name = ButtonConfig.Name or "Button"
					ButtonConfig.Icon = ButtonConfig.Icon or "rbxassetid://12804017021"
					ButtonConfig.Callback = ButtonConfig.Callback or function() end
					
					local buttonholder = Instance.new("Frame")
					buttonholder.Size = UDim2.new(1, -4, 0, 33)
					buttonholder.BackgroundColor3 = Color3.fromRGB(40,40,40)
				    buttonholder.Parent = sectionholder
					corner2[1]:Clone().Parent = buttonholder
					
					local button = Instance.new("TextButton")
					button.Size = UDim2.new(1, 0, 1, 0)
					button.Text = ButtonConfig.Name
					button.BackgroundTransparency = 1
					button.TextColor3 = Color3.fromRGB(255,255,255)
					button.Font = Enum.Font.GothamSemibold
					button.Parent = buttonholder
					button.TextXAlignment = Enum.TextXAlignment.Left
					padding[1]:Clone().Parent = button
					button.TextSize = 13
					
					local buttonicon = Instance.new("TextLabel")
					buttonicon.Size = UDim2.new(0, 22, 0, 22)
					buttonicon.Position = UDim2.new(1, -28, 0, 5)
					buttonicon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					buttonicon.Text = "" -- text editor so annoying it makes my emojis into random ass unicode
					buttonicon.TextColor3 = Color3.fromRGB(255, 255, 255)
					buttonicon.TextSize = 9
					buttonicon.BackgroundTransparency = 1
					buttonicon.Parent = buttonholder
					
					button.MouseEnter:Connect(function()
					    TweenService:Create(buttonholder, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(50,50,50)}):Play()
					end)
					
					button.MouseLeave:Connect(function()
					    TweenService:Create(buttonholder, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(40,40,40)}):Play()
					end)
		
					button.MouseButton1Down:Connect(function()
						TweenService:Create(buttonholder, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(63,63,63)}):Play()
					end)
			
					button.MouseButton1Up:Connect(function()
						TweenService:Create(buttonholder, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(66,66,66)}):Play()
						spawn(ButtonConfig.Callback)
					end)
				end
				
				function ElementsFunctions:AddToggle(ToggleConfig)
				    ToggleConfig = ToggleConfig or {}
				    ToggleConfig.Name = ToggleConfig.Name or "Toggle"
				    ToggleConfig.Default = ToggleConfig.Default or false
				    ToggleConfig.Callback = ToggleConfig.Callback or function() end
				
				    local Toggle = {Value = ToggleConfig.Default}
				
				    local toggleholder = Instance.new("Frame")
				    toggleholder.Size = UDim2.new(1, -4, 0, 33)
				    toggleholder.BackgroundColor3 = Color3.fromRGB(40,40,40)
				    toggleholder.BorderSizePixel = 0
				    toggleholder.Parent = sectionholder
				    corner2[1]:Clone().Parent = toggleholder
				
				    local toggletitle = Instance.new("TextLabel")
				    toggletitle.Size = UDim2.new(1, -30, 1, 0)
				    toggletitle.Text = ToggleConfig.Name
				    toggletitle.BackgroundTransparency = 1
				    toggletitle.TextColor3 = Color3.fromRGB(255, 255, 255)
				    toggletitle.Font = Enum.Font.GothamSemibold
				    toggletitle.TextXAlignment = Enum.TextXAlignment.Left
				    toggletitle.Parent = toggleholder
		    		padding[1]:Clone().Parent = toggletitle
		            toggletitle.TextSize = 13
		            
				    local toggle = Instance.new("ImageButton")
				    toggle.Size = UDim2.new(0, 24, 0, 24)
				    toggle.Position = UDim2.new(1, -30, 0.5, -12)
				    toggle.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
				    toggle.Image = "rbxassetid://110718870105693"
				    toggle.Parent = toggleholder
		    		toggle.ImageTransparency = 1
			    	toggle.BackgroundTransparency = 0
				    local togglecorner = Instance.new("UICorner", toggle)
				    togglecorner.CornerRadius = UDim.new(0, 3)
				
				    function Toggle:Set(Value)
				        Toggle.Value = Value
				        TweenService:Create(toggle, TweenInfo.new(0.25), {ImageTransparency = Toggle.Value and 0 or 1}):Play()
				        ToggleConfig.Callback(Toggle.Value)
				    end    
				
				    toggle.MouseEnter:Connect(function()
				        TweenService:Create(toggleholder, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(50,50,50)}):Play()
				    end)
				
				    toggle.MouseLeave:Connect(function()
				        TweenService:Create(toggleholder, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(40,40,40)}):Play()
				    end)
				
				    toggle.MouseButton1Down:Connect(function()
				        TweenService:Create(toggle, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(80,80,80)}):Play()
				    end)
				
				    toggle.MouseButton1Up:Connect(function()
				        Toggle:Set(not Toggle.Value)
				    end)
				
				    Toggle:Set(Toggle.Value)
				    return Toggle
				end  
				
				function ElementsFunctions:AddInput(TextboxConfig)
					TextboxConfig = TextboxConfig or {}
					TextboxConfig.Name = TextboxConfig.Name or "Textbox"
					TextboxConfig.Default = TextboxConfig.Default or ""
					TextboxConfig.HideText = TextboxConfig.HideText or false
					TextboxConfig.Callback = TextboxConfig.Callback or function() end
					
					local textboxholder = Instance.new("Frame")
					textboxholder.Size = UDim2.new(1, -4, 0, 50)
					textboxholder.BackgroundColor3 = Color3.fromRGB(40,40,40)
					textboxholder.BackgroundTransparency = 0
					textboxholder.Parent = sectionholder
					corner2[1]:Clone().Parent = textboxholder
					
					local textboxtitle = Instance.new("TextLabel")
					textboxtitle.Size = UDim2.new(1, 0, 0, 20)
					textboxtitle.Text = TextboxConfig.Name
					textboxtitle.BackgroundTransparency = 1
					textboxtitle.TextColor3 = Color3.fromRGB(255,255,255)
					textboxtitle.Font = Enum.Font.GothamSemibold
					textboxtitle.Parent = textboxholder
					textboxtitle.TextSize = 13
					textboxtitle.TextXAlignment = Enum.TextXAlignment.Left				
					
					GetUI({"UIPadding"}, {
					    PaddingTop = UDim.new(0, 6),
					    PaddingLeft = UDim.new(0, 12)
					}, textboxtitle)
					
					local textbox = Instance.new("TextBox")
					textbox.Size = UDim2.new(1, -20, 0, 24)
					textbox.Position = UDim2.new(0, 11, 0, 22)
					textbox.BackgroundColor3 = Color3.fromRGB(67,67,67)
					textbox.PlaceholderText = TextboxConfig.Default
		            textbox.PlaceholderColor3 = Color3.fromRGB(111,111,111)
					textbox.Text = ""
					textbox.TextColor3 = Color3.fromRGB(200,200,200)
					textbox.BackgroundTransparency = 0
					textbox.Font = Enum.Font.GothamSemibold
					textbox.TextSize = 13
					textbox.Parent = textboxholder
					textbox.ClearTextOnFocus = false
					corner2[1]:Clone().Parent = textbox
				
				    textbox.FocusLost:Connect(function()
				        TextboxConfig.Callback(textbox.Text)
				        if TextboxConfig.HideText then
				            textbox.Text = ""
				        end
				    end)
				
				    textbox.MouseEnter:Connect(function()
				        textbox.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
				    end)
				
				    textbox.MouseLeave:Connect(function()
				        textbox.BackgroundColor3 = Color3.fromRGB(67, 67, 67)
				    end)
				
				    textbox.Focused:Connect(function()
					    textbox:CaptureFocus()
					end)
				
				    textbox.Focused:Connect(function()
					    textbox.BackgroundColor3 = Color3.fromRGB(75, 75, 75)
					end)
				end
				
				function ElementsFunctions:AddDropdown(DropdownConfig)
				    DropdownConfig = DropdownConfig or {}
				    DropdownConfig.Name = DropdownConfig.Name or "Dropdown"
				    DropdownConfig.Choices = DropdownConfig.Choices or {}
				    DropdownConfig.Default = DropdownConfig.Default or ""
				    DropdownConfig.Callback = DropdownConfig.Callback or function() end
				
				    local Dropdown = {
				        Value = DropdownConfig.Default,
				        Options = DropdownConfig.Choices,
				        Buttons = {},
				        Toggled = false,
				        Type = "Dropdown"
				    }
				    
				    local MaxElements = 5
				    local TweenService = game:GetService("TweenService") -- Ensure TweenService is properly defined
				
				    if not table.find(Dropdown.Options, Dropdown.Value) then
				        Dropdown.Value = "!"
				    end
				
				    local dropdownholder = Instance.new("Frame")
				    dropdownholder.Size = UDim2.new(1, -4, 0, 50)
				    dropdownholder.BackgroundColor3 = Color3.fromRGB(40,40,40)
				    dropdownholder.Active = true
				    dropdownholder.Parent = sectionholder
				    corner2[1]:Clone().Parent = dropdownholder
				
				    local dropdownscroll = Instance.new("ScrollingFrame")
				    dropdownscroll.Size = UDim2.new(1, 0, 1, 0)
				    dropdownscroll.ScrollBarThickness = 0
				    dropdownscroll.ScrollingEnabled = false
			    	dropdownscroll.BorderSizePixel = 0
				    dropdownscroll.BackgroundTransparency = 1
				    dropdownscroll.Parent = dropdownholder
				    local list3 = list[1]:Clone()
				    list3.Parent = dropdownscroll
				
				    local dropdownmain = Instance.new("Frame")
				    dropdownmain.Size = UDim2.new(1, 0, 0, 50)
				    dropdownmain.BackgroundColor3 = Color3.fromRGB(40,40,40)
				    dropdownmain.Active = true
		    		dropdownmain.BorderSizePixel = 0
				    dropdownmain.Parent = dropdownscroll
				
				    local dropdowntitle = Instance.new("TextButton")
				    dropdowntitle.Size = UDim2.new(1, 0, 0, 50)
				    dropdowntitle.Text = DropdownConfig.Name
				    dropdowntitle.BackgroundTransparency = 1
				    dropdowntitle.TextColor3 = Color3.fromRGB(255, 255, 255)
				    dropdowntitle.Font = Enum.Font.GothamSemibold
				    dropdowntitle.Parent = dropdownmain
				    dropdowntitle.TextSize = 13
				    dropdowntitle.TextXAlignment = Enum.TextXAlignment.Left
			    	dropdowntitle.TextYAlignment = Enum.TextYAlignment.Top
				    
				    local padding3 = GetUI({"UIPadding"}, {
					    PaddingTop = UDim.new(0, 6),
					    PaddingLeft = UDim.new(0, 12)
					}, dropdowntitle)
					
					local dropdownline = Instance.new("Frame")
					dropdownline.Size = UDim2.new(0, 60, 0, 1)
					dropdownline.Position = UDim2.new(0, 0, 0, 18)
					dropdownline.BackgroundColor3 = Color3.fromRGB(80,80,80)
					dropdownline.Active = true
					dropdownline.BackgroundTransparency = 0 
					dropdownline.Parent = dropdowntitle
					corner2[1]:Clone().Parent = dropdownline
				
				    local dropdownicon = Instance.new("TextButton")
				    dropdownicon.Size = UDim2.new(0, 22, 0, 22)
				    dropdownicon.Position = UDim2.new(1, -27, 0, 5)
				    dropdownicon.Text = ">"
			    	dropdownicon.Active = false
				    dropdownicon.Rotation = -90
				    dropdownicon.BackgroundTransparency = 1
				    dropdownicon.TextColor3 = Color3.fromRGB(255, 255, 255)
				    dropdownicon.Font = Enum.Font.GothamBold
				    dropdownicon.Parent = dropdownmain
				    dropdownicon.TextSize = 14
				
				    local dropdownselected = Instance.new("TextLabel")
				    dropdownselected.Size = UDim2.new(0, 4, 0, 20)
				    dropdownselected.Position = UDim2.new(0, 12, 0, 26)
				    dropdownselected.Text = Dropdown.Value
				    dropdownselected.AutomaticSize = Enum.AutomaticSize.X
				    dropdownselected.BackgroundTransparency = 1
				    dropdownselected.Active = false
		    		dropdownselected.BackgroundColor3 = Color3.fromRGB(40,40,40)
				    dropdownselected.TextColor3 = Color3.fromRGB(111,111,111)
				    dropdownselected.Font = Enum.Font.GothamSemibold
				    dropdownselected.Parent = dropdownmain
		    		dropdownselected.TextXAlignment = Enum.TextXAlignment.Left
				    dropdownselected.TextSize = 12
					
				    local padding5 = GetUI({"UIPadding"}, {
					    PaddingLeft = UDim.new(0, 2),
					    PaddingRight = UDim.new(0, 2)
					}, dropdownselected)
					
				    list3:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
				        dropdownscroll.CanvasSize = UDim2.new(0, 0, 0, list3.AbsoluteContentSize.Y)
				    end)
				
				    local function AddOptions(Options)
				        for _, Option in pairs(Options) do
				            if Dropdown.Buttons[Option] then continue end
				
				            local dropdown = Instance.new("Frame")
				            dropdown.Size = UDim2.new(1, 0, 0, 28)
				            dropdown.BackgroundTransparency = 1
				            dropdown.BackgroundColor3 = Color3.fromRGB(80,80,80)
				            dropdown.Parent = dropdownscroll
				            corner2[1]:Clone().Parent = dropdown
				
				            local dropdownselect = Instance.new("TextButton")
				            dropdownselect.Size = UDim2.new(1, 0, 0, 33)
				            dropdownselect.Text = Option
				            dropdownselect.BackgroundTransparency = 1
				            dropdownselect.TextColor3 = Color3.fromRGB(255,255,255)
				            dropdownselect.Font = Enum.Font.GothamSemibold
				            dropdownselect.BackgroundColor3 = Color3.fromRGB(111,111,111)
				            dropdownselect.Parent = dropdown
				            dropdownselect.TextSize = 13
				            dropdownselect.ClipsDescendants = true
				            dropdownselect.TextXAlignment = Enum.TextXAlignment.Left
				            dropdownselect.Name = "Title" 
				            padding[1]:Clone().Parent = dropdownselect
				
				            dropdownselect.MouseButton1Click:Connect(function()
				                Dropdown:Set(Option)
				            end)
				
				            Dropdown.Buttons[Option] = dropdown
				        end
				    end
				
				    function Dropdown:Update(Options, Delete)
				        if Delete then
				            for _, v in pairs(Dropdown.Buttons) do
				                v:Destroy()
				            end
				            table.clear(Dropdown.Options)
				            table.clear(Dropdown.Buttons)
				        end
				        Dropdown.Options = Options
				        AddOptions(Dropdown.Options)
				    end    
				
				    function Dropdown:Set(Value)
				        if not table.find(Dropdown.Options, Value) then
				            Dropdown.Value = "!"
				            dropdownselected.Text = Dropdown.Value
				            for _, v in pairs(Dropdown.Buttons) do
				                TweenService:Create(v, TweenInfo.new(.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
				                local button = v:FindFirstChild("Title")
				                if button then
				                    TweenService:Create(button, TweenInfo.new(.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {TextTransparency = 0.4}):Play()
				                end
				            end
				            return
				        end
				
				        Dropdown.Value = Value
				        dropdownselected.Text = Dropdown.Value
				
				        for _, v in pairs(Dropdown.Buttons) do
				            TweenService:Create(v, TweenInfo.new(.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
				            local button = v:FindFirstChild("Title")
				            if button then
				                TweenService:Create(button, TweenInfo.new(.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {TextTransparency = 0.4}):Play()
				            end
				        end
				
				        local selectedButton = Dropdown.Buttons[Value]
				        if selectedButton then
				            TweenService:Create(selectedButton, TweenInfo.new(.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
				            local button = selectedButton:FindFirstChild("Title")
				            if button then
				                TweenService:Create(button, TweenInfo.new(.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
				            end
				        end				
				        DropdownConfig.Callback(Dropdown.Value)
				    end
				
					dropdowntitle.MouseEnter:Connect(function()
				        dropdownmain.BackgroundColor3 = Color3.fromRGB(50,50,50)
				    end)
				
				    dropdowntitle.MouseLeave:Connect(function()
				        dropdownmain.BackgroundColor3 = Color3.fromRGB(40,40,40)
				    end)
				
					dropdowntitle.MouseButton1Click:Connect(function()      
					    Dropdown.Toggled = not Dropdown.Toggled      
					
					    local itemCount = math.min(#Dropdown.Options, MaxElements)      
					    local itemHeight = 28
					    local baseHeight = 50
					    local padding = 0.4
					    
					    local newSize
					    if Dropdown.Toggled then
					        newSize = UDim2.new(1, -4, 0, baseHeight + (itemCount * (itemHeight + padding)))
					    else
					        newSize = UDim2.new(1, -4, 0, baseHeight)
					    end
					
					    TweenService:Create(dropdownholder, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Size = newSize}):Play()
					    TweenService:Create(dropdownicon, TweenInfo.new(0.23, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Rotation = Dropdown.Toggled and 90 or -90}):Play()
					end)
				
				    Dropdown:Update(Dropdown.Options, false)
				    Dropdown:Set(Dropdown.Value)
				
				    return Dropdown
				end
				
			function ElementsFunctions:AddSlider(SliderConfig)
			    SliderConfig = SliderConfig or {}
			    SliderConfig.Name = SliderConfig.Name or "Slider"
			    SliderConfig.Range = SliderConfig.Range or {5, 20}
			    SliderConfig.Increment = SliderConfig.Increment or 1
			    SliderConfig.Default = SliderConfig.Default or SliderConfig.Range[1]
			    SliderConfig.Callback = SliderConfig.Callback or function() end
			    SliderConfig.Color = SliderConfig.Color or Color3.fromRGB(9, 149, 98)
			
			    local Slider = {Value = SliderConfig.Default}
			    local Dragging = false
	
			    local sliderholder = Instance.new("Frame")
				sliderholder.Size = UDim2.new(1, -4, 0, 50)
				sliderholder.BackgroundColor3 = Color3.fromRGB(40,40,40)
				sliderholder.Active = true
				sliderholder.BackgroundTransparency = 0
				sliderholder.Parent = sectionholder
				corner2[1]:Clone().Parent = sliderholder
				
				local slidertitle = Instance.new("TextLabel")
				slidertitle.Size = UDim2.new(1, 0, 0, 20)
				slidertitle.Position = UDim2.new(0, 0, 0, 2)
				slidertitle.Text = SliderConfig.Name
				slidertitle.BackgroundTransparency = 1
				slidertitle.TextColor3 = Color3.fromRGB(255,255,255)
				slidertitle.Font = Enum.Font.GothamSemibold
				slidertitle.Parent = sliderholder
				slidertitle.TextSize = 13
				slidertitle.TextXAlignment = Enum.TextXAlignment.Left
				padding[1]:Clone().Parent = slidertitle
			
			    local slider = Instance.new("Frame")
			    slider.Size = UDim2.new(1, -20, 0, 6)
			    slider.Position = UDim2.new(0, 10, 0, 30)
			    slider.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
			    slider.BorderSizePixel = 0
			    slider.Parent = sliderholder
			
			    local sliderfill = Instance.new("Frame")
			    sliderfill.Size = UDim2.new(0, 0, 1, 0)
			    sliderfill.BackgroundColor3 = SliderConfig.Color
			    sliderfill.BorderSizePixel = 0
			    sliderfill.Parent = slider
			
			    local sliderknob = Instance.new("Frame")
			    sliderknob.Size = UDim2.new(0, 12, 0, 12)
			    sliderknob.Position = UDim2.new(0, 0, 0.5, 0)
			    sliderknob.AnchorPoint = Vector2.new(0.5, 0.5)
			    sliderknob.BackgroundColor3 = SliderConfig.Color
			    sliderknob.BorderSizePixel = 0
			    sliderknob.Parent = slider
			
			    local slidercorner = GetUI({"UICorner"}, {
				    CornerRadius = UDim.new(1, 0)
				}, sliderknob)
			
			    local value = Instance.new("TextLabel")
			    value.Size = UDim2.new(0, 30, 0, 20)
			    value.Position = UDim2.new(1, -35, 0, 2)
			    value.BackgroundColor3 = Color3.fromRGB(46,46,46)
			    value.BackgroundTransparency = 1
			    value.TextColor3 = Color3.fromRGB(255, 255, 255)
			    value.Font = Enum.Font.GothamBold
			    value.TextSize = 12
			    value.Text = tostring(SliderConfig.Default)
			    value.Parent = sliderholder 
			    corner2[1]:Clone().Parent = value
	
			    slider.InputBegan:Connect(function(input)
			        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			            Dragging = true
			        end
			    end)
			
			    slider.InputEnded:Connect(function(input)
			        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			            Dragging = false
			        end
			    end)
			
			    UserInputService.InputChanged:Connect(function(input)
			        if Dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
			            local relativePosition = math.clamp((input.Position.X - slider.AbsolutePosition.X) / slider.AbsoluteSize.X, 0, 1)
			            Slider:Set(SliderConfig.Range[1] + ((SliderConfig.Range[2] - SliderConfig.Range[1]) * relativePosition))
			        end
			    end)
			
			    function Slider:Set(Value)
			        self.Value = math.clamp(math.floor(Value / SliderConfig.Increment + 0.5) * SliderConfig.Increment, SliderConfig.Range[1], SliderConfig.Range[2])
			        local percent = (self.Value - SliderConfig.Range[1]) / (SliderConfig.Range[2] - SliderConfig.Range[1])
			
			        TweenService:Create(sliderfill, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Size = UDim2.new(percent, 0, 1, 0)}):Play()
			        TweenService:Create(sliderknob, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = UDim2.new(percent, 0, 0.5, 0)}):Play()
			
			        value.Text = tostring(self.Value)
			        SliderConfig.Callback(self.Value)
			    end
			
			    Slider:Set(Slider.Value)
			    return Slider
			end  
					
			return ElementsFunctions
		end

		return ContainerItems
	end
	
	return WindowFunctions
end  

return UI
